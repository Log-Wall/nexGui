{
    "name": "nexgui",
    "enabled": true,
    "description": "Khaseem's Nexus GUI",
    "type": "group",
    "id": 1,
    "items": [
        {
            "type": "function",
            "name": "SCRATCH",
            "enabled": true,
            "id": 30,
            "code": "/*****\nSLIM TEST!!!!!!\n- nexMap needs to be changed to load into \"container_1\" for it to work with nexGui\n- CONFIG wordwrap should be set to 0\n\n- Things todo:\n-- Add configuration menu\n\t- font sizes\n    - color options\n    - display room ids\n    - \n\n////////////////////////////////////////////////////////////////////////\nlet containers = function(i) {\n    $(`#progressContainer${i}`).remove();\n    $('<div></div>', { id:`progressContainer${i}`, class:\"\"})\n        .append(`<div id=\"progress${i}\"></div>`)\n        .appendTo('#tbl_5a');\n\n    $(`#progressContainer${i}`).css({\n        width:'90%',\n        'margin':'0 auto',\n        'height':'15px',\n        'border':'1px silver solid',\n        'border-radius':'4px',\n        'background':'white'\n    })\n    $(`#progress${i}`).css({\n        background:'green',\n        height:'14px',\n        width:'100%',\n        'border-right':'1px silver solid',\n        'border-top-right-radius':'4px',\n        'border-bottom-right-radius':'4px',\n        'line-height':'15px',\n        'transform-origin': 'left center',\n        'will-change': 'transform, background',\n        position: 'relative',\n        'z-index': 1\n    })\n    $('<div></div', {id: `progress${i}text`}).css({position:'relative','z-index':3,top:'-100%',color:'black'}).text(15).appendTo('#progressContainer1')\n}\nfor(let i = 1; i < 7; i++) {\n    containers(i);\n}\n\n$('#Khaseem-counter').remove();\n$('body').append(` <style id=\"Khaseem-counter\">\n\n.khaseemTimer1 {\n\ttransition:transform 15s linear;\n    transform: scaleX(0);\n}\n\n.khaseemTimer2 {\n\tanimation: timerGauge2 15s linear;\n}\n\n.khaseemTimerX {\n\tanimation: timerGaugeX 15s linear forwards;\n}\n\n@keyframes timerGaugeX {\n  0% {\n\tbackground: crimson;\n  }\n25% {\n\tbackground: red;\n  }\n50% {\n\tbackground: orange;\n  }\n75% {\n\tbackground: yellow;\n  }\n  100% {\n\tbackground: green;\n  }\n}\n\n@keyframes timerGauge2 {\n  0% {\n    transform: scaleX(1);\n  }\n  100% {\n    transform: scaleX(0);\n  }\n}\n\n.khaseemTimer4 {\n\ttransition:transform 15s linear, background 15s linear;\n    transform: scaleX(0);\n}\n\n.khaseemTimer5 {\n\tanimation: timerGauge5 15s linear;\n}\n\n@keyframes timerGauge5 {\n  0% {\n    transform: scaleX(1);\n\tbackground: green;\n  }\n  100% {\n    transform: scaleX(0);\n\tbackground: red;\n  }\n}\n\n</style>`)\n//span {opacity: 0.99;}\n\n$('#progress1').addClass('khaseemTimer')\n$('#progress2').addClass('khaseemTimer2')\ndocument.getElementById('progress3').animate([\n        {transform: 'scaleX(1)'},\n        {transform: 'scaleX(0)'}\n    ], {duration:15*1000, easing:'linear'})\n/////////////////////////////////////////////////////////////////////////\n$('#progress1').addClass('khaseemTimer1')\n\n$('#progress2').addClass('khaseemTimer2')\n\nvar timer3 = document.getElementById('progress3').animate([\n        {transform: 'scaleX(1)'},\n        {transform: 'scaleX(0)'}\n    ], {duration:15*1000, easing:'linear', composite:'replace', fill: 'forwards'})\n$('#progress3').addClass('khaseemTimerX')\n$('#progress3').css('background', 'red')\n\n$('#progress4').addClass('khaseemTimer4')\n$('#progress4').css('background', 'red')\n\n$('#progress5').addClass('khaseemTimer5')\n\nvar timer6 = document.getElementById('progress6').animate([\n    {transform: 'scaleX(1) translateZ(0)', background:'green'},\n        {transform: 'scaleX(0.75) translateZ(0)', background:'yellow'},\n        {transform: 'scaleX(0.5) translateZ(0)', background:'orange'},\n    {transform: 'scaleX(0.25) translateZ(0)', background:'red'},\n        {transform: 'scaleX(0) translateZ(0)', background:'red'}\n        \n    ], {duration:15*1000, easing:'linear', composite: 'replace'})\n\nvar startTime = performance.now();\n//var tester1 = setInterval(()=>{$('#progress1text').text((parseFloat($('#progress1text').text())-0.1).toFixed(1))},100)\nvar tester3 = setInterval(()=>{$('#progress3text').text(parseFloat(15-timer3.currentTime/1000).toFixed(1))},100)\n//var tester6 = setInterval(()=>{$('#progress6text').text(parseFloat(15-timer6.currentTime/1000).toFixed(1))},100)\ntimer3.onfinish = function() {\n  clearInterval(tester3);\n    $('#progress3').removeClass('khaseemTimerX')\n};\n\ntimer6.onfinish = function() {\n    nexPrint((performance.now()-startTime)/1000)\n};\n*****/"
        },
        {
            "type": "function",
            "name": "README",
            "enabled": true,
            "id": 85,
            "code": "/***************************************************************************************************\nPackage:  nexGui\nBy:       Khaseem (Achaea)\nVersion:  ????\nRev Date: 2021-11-18\n\nnexGui is a complete overhaul of the Nexus UI with a suite of additional \nutility modules included\n****************************************************************************************************\nIf you have any questions, issues, or suggestions for improvement\nplease contact me through in-game message, on the official forums,\nor the unofficial discord.\n\nIf this package improves your game experience donations to Khaseem\nare always welcome and appreciated.\n\n****************************************************************************************************\nNOTES:\n- Anyone using the default nexMap package will need to change the initial load location\n  of the nexMap window to container_1. This is found in nexMap>Functions>CustomTabs at the bottom it\n  will look like this:\n  \"nexMap_tab.init(\"nexmap_map\", \"nexMap\", \"nexMap\", 'https://cdn.jsdelivr.net/gh/Log-Wall/nexMap/nexmap_hat.png', 'container_1');\"\n  \n- Anyone using Jhui's Nexsys package should disable the onGMCP function of nexGUi as\n  nexGui uses the same event system. Leaving it enabled will cause all events to fire twice.\n  \nng load\t- ( RUN THIS FIRST ) Initial load of the GUI.\n\nng\t\t- Displays nexMap Commands on screen.\n\n****************************************************************************************************\nSpecial Thanks to:\nStack Overflow - For obvious reasons.\nArgwin - Serving as the alpha tester since early development.\nSphera - Serving as a beta tester in later development.\n****************************************************************************************************/"
        },
        {
            "type": "function",
            "name": "INSTRUCTIONS",
            "enabled": true,
            "id": 152,
            "code": "/******************************************************************\nEventually I will add documentation for user modifications.\n\n****** TIMER ******************************************************\n\nTimers added with nexGui.timer.add(id, label, duration, grow/shrink, locationid)\nexamples:\nnexGui.timer.add('tree', 'Tree Tattoo', 15, 'grow', '#nexTimerTableTop');\nnexGui.timer['tree'].start();\nnexGui.timer['tree'].stop();\n\n****** PARTY ******************************************************\n\nApplicable variables tied to the party pane and toggles can be accessed in your own settings with:\nArray - nexGui.party.members\nString - nexGui.party.leader\nBoolean - nexGui.party.targetCalls\nBoolean - nexGui.party.affCalls\nBoolean - nexGui.party.callTargets\nBoolean - nexGui.party.callAffs\nBoolean - nexGui.party.goldCollection\nBoolean - nexGui.party.gagChat\n\n********************************************************************/"
        },
        {
            "type": "group",
            "name": "nexGui",
            "enabled": true,
            "id": 87,
            "items": [
                {
                    "type": "group",
                    "name": "Dependencies",
                    "enabled": true,
                    "id": 79,
                    "items": [
                        {
                            "type": "function",
                            "name": "customTabs",
                            "enabled": true,
                            "id": 3,
                            "code": "/***************************************************************************************************\n  Credit to Keneanung:\n  https://forums.achaea.com/discussion/3583/adding-html5-tabs\n***************************************************************************************************/\n'use strict';\nTab = {\n    active: true,\n    init: function init (name, title, mouseover, icon, container){\n        var saneId = name.toLowerCase().replace(/\\s/g, \"_\");\n        var divId = 'tbl_' + saneId;\n        this.client_tab = {\n            id: saneId,\n            tab_title: mouseover,\n            tab_html: title,\n            tab_type: \"content\",\n            content_html: '<div id=\"' + divId + '\" class=\"tab_table\" style=\"border:0;overflow:auto;height:100%\"></div>',\n            icon_active: icon\n        };\n        this.div_id = divId;\n        this.container = container;\n        client.register_custom_tab(this.client_tab, container);\n    },\n    move: function move (newContainer, newPosition){\n        var tabId = this.client_tab.id;\n        // move default location too!\n        var oldIndex = client.default_display_tabs[this.container].indexOf(tabId);\n        if(oldIndex >= 0){\n            client.default_display_tabs[this.container].splice(oldIndex, 1);\n        }\n        client.default_display_tabs[newContainer].push(tabId);\n        client.move_tab_to_existing_container(tabId, newContainer, newPosition);\n        this.container = newContainer;\n    },\n    \n    hide: function hide (){\n        client.activate_tab(this.client_tab.id, false);\n    },\n    \n    show: function show (){\n        client.activate_tab(this.client_tab.id, true);\n    },\n    \n    append: function append (what, newline){\n        if(newline){\n            what += \"<br>\";\n        }\n        $(\"#\" + this.div_id).append(what);   \n    },\n    \n    clear: function clear(){\n        $(\"#\" + this.div_id).empty();\n    },\n    \n    get_content_div: function get_content_div(){\n        return $(\"#\" + this.div_id);\n    },\n    \n    activate: function activate (){\n        var active_tab_index = $(\"#\" + this.container + \" > div\").tabs(\"option\", \"active\");\n        this.focus_before = \"#\" + $(\"#\" + this.container + \" > div > ul > li\").eq(active_tab_index).attr(\"id\");\n        var thisIndex = $(\"#tab_\" + this.client_tab.id).attr(\"data-tab-id\");\n        $(\"#\" + this.container + \" > div\").tabs(\"option\", \"active\", thisIndex);\n        this.active = true;\n    },\n    \n    deactivate: function deactivate (){\n        var newActiveTab = $(this.focus_before)\n        var currentContainer = newActiveTab.attr(\"data-display-element-id\");\n        if(currentContainer === this.container){\n            $(\"#\" + this.container + \" > div\").tabs(\"option\", \"active\", newActiveTab.attr(\"data-tab-id\"));\n        }\n        this.active=false;\n    },\n    \n    tabContainer: {\n        upper_left: \"container_1\",\n        lower_left: \"container_2\",\n        main: \"main_container\",\n        upper_right: \"container_3\",\n        lower_right: \"container_4\"\n    }\n};\n/***************************************************************************************************/",
                            "items": []
                        },
                        {
                            "type": "function",
                            "name": "jsHelpers",
                            "enabled": true,
                            "id": 89,
                            "code": "/***************************************************************************************************\n  Credit to Jhui:\n  Nexsys javascript helper functions\n***************************************************************************************************/\n'use strict';\nString.prototype.toProperCase = function () {\n    return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n};\n\n// A few helpful functions to map/convert dot representations to their object counterparts.\n// Very useful when want to store/pull to/from database as a column name but want to\n// represent it in a view as a nested object.\n\n//var objStrConv = {};\n\n\n// function to set value for a nested object.\n// It will initialize the parent object if it doesn't exist\n// and recursively move down until child object is set\n// If no val is passed in then it basically initializes the object\nObject.setAtString = function(obj, dotarr, val) {\n    a = dotarr.shift();\n    if ( dotarr.length == 0 ) { // if at last element in chain, set value\n        if (obj[a] == undefined) {\n            obj[a] = {};\n        }\n        if( Array.isArray(val) ) {\n            obj[a] = val;\n        }\n        else if(typeof val === 'object') {\n            for(key in val) {\n                obj[a][key] = val[key];\n            }\n        }\n        else {\n            obj[a] = val;\n        }\n        return;\n    }\n    else {\n        if (obj[a] == undefined) {\n            obj[a] = {};\n        }\n        Object.setAtString(obj[a], dotarr, val);\n    }\n};\n\n// get value of a nested object by its string representation 'blah.blah1.blah2'\nObject.getByString = function(obj, dotarr) {\n    a = dotarr.shift();\n    if ( dotarr.length == 0 ) { // if at last element in chain, get value\n        return obj[a] || null;\n    }\n    else {\n        if (obj[a] == undefined) {\n            //database likes null, but doesn't like undefined\n            return null;\n        }\n        return Object.getByString(obj[a], dotarr);\n    }\n};\n\n// Pass object to initialize, and the map of key-value pairs, and the values to pull from with keys\n// where value is the nested structure in dot notation 'nest1.nest2.nest3'\nObject.setStructure = function(obj, map, vals) {\n    angular.forEach(map, function(value, key) {\n        Object.setAtString(obj, value.split('.'), vals[key]);\n    });\n};\n\n// Pull values from a nested structure and map them to a new structure defined in map\nObject.getFromStructure = function(to_obj, from_obj, map) {\n    angular.forEach(map, function(value, key) {\n        to_obj[key] = Object.getByString(from_obj, value.split('.'));\n    });\n};\n\n// Find the first key where 2 arrays or objects intersect and return it\nArray.arraysIntersect = function(arr1, arr2) {\n    if( Array.isArray(arr1) && Array.isArray(arr2) ) {\n        for(let i=0; i < arr1.length; i++) {\n            for(let j=0; j < arr2.length; j++) {\n                if(arr1[i] == arr2[j]) {\n                    return arr1[i];\n                }\n            }\n        }\n    }\n    else if( Array.isArray(arr1) && !Array.isArray(arr2) ) {\n        for(let i=0; i < arr1.length; i++) {\n            for(let key in arr2) {\n                if(arr1[i] == key && arr2[key]) {\n                    return key;\n                }\n            }\n        }\n    }\n    else if( !Array.isArray(arr1) && Array.isArray(arr2) ) {\n        for(let key in arr1) {\n            for(let i=0; i < arr2.length; i++) {\n                if(arr2[i] == key && arr1[key]) {\n                    return key;\n                }\n            }\n        }\n    }\n    else {\n        for(let key in arr1) {\n            for(let key2 in arr2) {\n                if(key == key2 && arr1[key] && arr2[key2]) {\n                    return key;\n                }\n            }\n        }\n    }\n\n    return false;\n};\n\nArray.equals = function(arr1, arr2) {\n    if (arr1.length !== arr2.length) {return false};\n    \n    if (!arr1.every((v, i) => v === arr2[i])) {return false};\n    \n    return true;\n}",
                            "items": []
                        },
                        {
                            "type": "function",
                            "name": "eventStream",
                            "enabled": true,
                            "id": 80,
                            "code": "/***************************************************************************************************\n  Credit to Jhui:\n  Nexsys event functions\n***************************************************************************************************/\n'use strict'\nnexSys.EventStream = class EventStream {\n    constructor() {\n        this.stream = {};\n    }\n\n    registerEvent(event, callback) {\n        if(this.stream[event] === undefined) {\n            this.stream[event] = [];\n        }\n        this.stream[event].push(callback);\n    }\n\n    raiseEvent(event, data) {\n        let streamEvent = this.stream[event];\n        if(streamEvent !== undefined) {\n            for(let i=0; i < streamEvent.length; i++) {\n                streamEvent[i](data);\n            }\n        }\n    }\n        \n    removeListener(event, listener) {\n        if(!this.stream[event])\n            return;\n        console.log(this.stream[event]);\n        let i = this.stream[event].findIndex(e => e.name == listener)\n        if (i >= 0) {\n        \tthis.stream[event].splice(i,1);\n        }\n        \n        console.log(this.stream[event]);\n    }\n};\n\nnexSys.eventStream = typeof nexSys.eventStream != 'undefined' ? nexSys.eventStream : new nexSys.EventStream();\n\nnexSys.system_loaded = true;",
                            "items": []
                        },
                        {
                            "type": "function",
                            "name": "gmcpHandler",
                            "enabled": true,
                            "id": 81,
                            "code": "/***************************************************************************************************\n  Credit to Jhui:\n  Nexsys event functions\n***************************************************************************************************/\nObject.assign(nexSys, {\n    gmcpHandler() {\n        while(nexSys.gmcpBackLog && nexSys.gmcpBackLog.length > 0) {\n            let current_args = nexSys.gmcpBackLog.shift();\n            if(current_args.gmcp_method) {\n                Object.setAtString(client.GMCP, current_args.gmcp_method.split('.'), current_args.gmcp_args);\n                nexSys.eventStream.raiseEvent(current_args.gmcp_method, current_args.gmcp_args);\n            }\n        }\n    }\n});\nnexSys.eventStream.registerEvent('SystemLoaded', function(args) { nexSys.gmcpHandler(); } );",
                            "items": []
                        }
                    ],
                    "actions": []
                },
                {
                    "type": "function",
                    "name": "onGMCP",
                    "enabled": true,
                    "id": 82,
                    "code": "client.GMCP = client.GMCP || {};\n\nnexSys.gmcpBackLog = nexSys.gmcpBackLog || [];\n\nnexSys.gmcpBackLog.push(args);\n\nif( nexSys.system_loaded ) {\n    try {\n    nexSys.gmcpHandler();\n    } catch(err) {\n        console.log(err);\n        throw err;\n    }\n}",
                    "items": []
                },
                {
                    "type": "function",
                    "name": "onLoad",
                    "enabled": true,
                    "id": 5,
                    "code": "'use strict'\nif (typeof nexSys === 'undefined') {nexSys = {}}\nGMCP.TargetHP_Old = '100%';\nreflex_disable(reflex_find_by_name(\"group\", \"nexGui.colors\", false, false, \"Nexgui\"));\nreflex_disable(reflex_find_by_name(\"group\", \"nexGui.stream\", false, false, \"Nexgui\"));\n\n$.getScript('https://cdn.jsdelivr.net/gh/Log-Wall/nexGui/nexGui.js')\n\t.done(function () {\n        $.getScript(\"https://unpkg.com/realm-web@1.2.0/dist/bundle.iife.js\", ()=>{nexGui.mongo.startUp();});  \n        $.getScript('https://cdn.jsdelivr.net/gh/Log-Wall/nexGui/nexusRewrites.js');\n        $.getScript('https://cdn.jsdelivr.net/gh/Log-Wall/nexGui/nexGui.themes.js');\n\n    \t$.getJSON('https://cdn.jsdelivr.net/gh/Log-Wall/nexGui/nexGui.nxs')\n    \t\t.done(function(data) {\n            \tpackages[packages.findIndex(e=>e.name=='nexgui')] = data;\n                run_function('clientOverrides', {}, 'Nexgui');\n                run_function('customTabs', {}, 'Nexgui');\n                run_function('jsHelpers', {}, 'Nexgui');\n                run_function('eventStream', {}, 'Nexgui');\n                run_function('gmcpHandler', {}, 'Nexgui');\n                run_function('nexGui.colors', {}, 'Nexgui');\n                run_function('nexGui.occultist', {}, 'Nexgui');\n                run_function('nexGui.dragon', {}, 'Nexgui');\n            \tgmcp_save_system(false)\n        })\n\t})\n\t.fail(function() {\n    \tconsole.log('nexGui package failed to load from CDN.');\n});\n\n"
                }
            ],
            "actions": []
        },
        {
            "type": "group",
            "name": "nexGui.colors",
            "enabled": false,
            "id": 145,
            "items": [
                {
                    "type": "function",
                    "name": "nexGui.colors",
                    "enabled": true,
                    "id": 100,
                    "code": "// https://www.w3schools.com/colors/colors_names.asp\n\n'use strict';\n\nnexGui.colors.room['a monolith sigil'] = {color:'red',text:'A MONOLITH SIGIL'};\n//nexGui.colors.city['ashtan'] = \"#800080\";\nnexGui.colors.attacks['jab'] = \"Orange\";\n//nexGui.colors.actions"
                },
                {
                    "type": "trigger",
                    "name": "Inline Highlighting",
                    "enabled": true,
                    "id": 133,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^(.+)$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "if (typeof nexGui === 'undefined') {return;}\n\nlet players = Object.keys(nexGui.cdb.players);\nfor (let i = 0; i < players.length; i++) {\n    \n    let matches = [...args[1].matchAll(nexGui.cdb.players[players[i]].regex)];\n    if (matches.length > 0) {\n        let colour = nexGui.colors.city[nexGui.cdb.players[players[i]].city];       \n        matches.forEach(e => {\n    \t\tcolorize_current_line(e.index,e[0].length, colour);\n    \t})\n    }\n}"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "Inline Highlighting",
                    "enabled": false,
                    "id": 132,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^(.+)$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "// Original function using dated .exec() method. Holding here for reference\n// if there are performance issues with using .matchAll()\nif (typeof nexGui === 'undefined') {return;}\n\nlet players = Object.keys(nexGui.cdb.players);\nfor (let i = 0; i < players.length; i++) {\n    //print(`Person: ${person}`, 'orange');\n    // The \\\\bs in the RegExp set boundries so you only catch full names\n    // Not names that are substrings of other words\n    //let regexp = new RegExp('\\\\b'+person+'\\\\b', 'g');\n    console.log(players[i]);\n    let arr;\n    let colour = nexGui.colors.city[nexGui.cdb.players[players[i]].city];\n\n    while ((arr = nexGui.cdb.players[players[i]].regex.exec(args[1])) !== null) {\n        //colorize_current_line(arr.index, arr[0].length, 'white', colour);\n        colorize_current_line(arr.index, arr[0].length, colour);\n    }\n}"
                        }
                    ],
                    "items": []
                }
            ],
            "actions": []
        },
        {
            "type": "group",
            "name": "nexGui.room",
            "enabled": true,
            "id": 44,
            "items": [
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 46,
                    "matching": "substring",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "You have the following enemies:",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.room.enemies = [];\nfor(let i = 1; i < current_block.length-1; i++) {\n\tif (current_block[i].line.indexOf(\" \") == -1)\n        nexGui.room.enemies.push(current_block[i].line);\n}"
                        }
                    ],
                    "items": []
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 47,
                    "matching": "exact",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "You have the following allies:",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.room.allies = [];\nfor(let i = 1; i < current_block.length-1; i++) {\n\tif (current_block[i].line.indexOf(\"You have\") > -1) {break}\n    if (current_block[i].line.indexOf(\"lust\") > -1) {continue}\n    nexGui.room.allies.push(current_block[i].line.split(\" \")[0]);\n}"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 52,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^You declare that (\\w+) will no longer be one of your enemies\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.room.enemies.splice(nexGui.room.enemies.indexOf(args[1]), 1);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 53,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^(\\w+) is now one of your enemies\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.room.enemies.push(args[1]);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 159,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^You declare that (\\w+) will no longer be one of your allies\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.room.enemies.splice(nexGui.room.allies.indexOf(args[1]), 1);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 160,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^(\\w+) is now one of your allies\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.room.allies.push(args[1]);"
                        }
                    ]
                }
            ],
            "actions": []
        },
        {
            "type": "group",
            "name": "nexGui.party",
            "enabled": true,
            "id": 38,
            "items": [
                {
                    "type": "trigger",
                    "name": "Party Gag",
                    "enabled": true,
                    "id": 49,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\(Party\\): \\w+ says, \".+$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "if (nexGui.party.gagChat) {gag_current_line()}"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 55,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^The following members of your party are in the realms:$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.party.members = [GMCP.Status.name];\nlet names = Object.keys(nexGui.cdb.players);\nlet nameCheck = function(txt) {\n    for(let i = 0; i < names.length-1; i++) {\n\n        if (txt.indexOf(names[i]) == -1) {continue;}\n        if (txt.search(nexGui.cdb.players[names[i]].regex) != -1) {\n            nexGui.party.members.push(names[i]);\n            //break;\n        }\n    }\n}\n\nfor(let i = 1; i < current_block.length - 1; i++) {\n\tnameCheck(current_block[i].parsed_line.text());\n}\nnexGui.party.updateMembers();"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 59,
                    "matching": "exact",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "You are not the member of any party.",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.party.members = [GMCP.Status.name];\nnexGui.party.updateMembers();"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 70,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^You have left your party\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.party.members = [GMCP.Status.name];\nnexGui.party.leader = GMCP.Status.name;\nnexGui.party.updateMembers();"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 64,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^You have joined \\w+'s party\\.$",
                    "actions": [
                        {
                            "action": "command",
                            "command": "pwho"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 56,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\(Party\\): (\\w+) has joined your party\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.party.addMember(args[1]);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 58,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\(Party\\): (\\w+) has left your party\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "if (nexGui.party.leader == args[1]) {\n    nexGui.party.leader = [GMCP.Status.name];\n\t$('#leaderSelectList').change();\n}\nnexGui.party.removeMember(args[1]);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 57,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\(Party\\): (\\w+) says, \"(\\w+) on (\\w+)\\.\"$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "//(Party): Dalran says, \"Paralysis on Dunn.\"\nif (nexGui.party.affCalls && nexGui.party.members.indexOf(args[1]) == -1)\n    return;\n\n// This triggers an event in my personal affliction tracking system. Left in place as\n// an example of how it might be used.\nif (GMCP.Target == args[3])\n    nexSys.eventStream.raiseEvent(`${args[2]}GotInsightAff`);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 41,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\(Party\\): (\\w+) says, \"(\\w+): (\\w+)\\.\"$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "//(Party): Fieth says, \"Vanessa: Asthma.\"\nif (nexGui.party.affCalls && nexGui.party.members.indexOf(args[1]) == -1)\n    return;\n\n// This triggers an event in my personal affliction tracking system. Left in place as\n// an example of how it might be used.\nif (GMCP.Target == args[2])\n    nexSys.eventStream.raiseEvent(`${args[3]}GotInsightAff`);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 42,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\(Party\\): (\\w+) says, \"Target: (.+)\\.\"$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "if (nexGui.party.targetCalls && args[1] == nexGui.party.leader) {\n    nexPrint(args[2]);\n    send_direct(`settarget ${args[2]}`);\n    send_direct(`enemy ${args[2]}`);\n}"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 126,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\(Party\\): (\\w+) says, \"TARGET (.+)\\.\"$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "//(Party): Mizik says, \"TARGET Cexkdb.\"\nif (nexGui.party.targetCalls && args[1] == nexGui.party.leader) {\n    nexPrint(args[2]);\n    send_direct(`settarget ${args[2]}`);\n    send_direct(`enemy ${args[2]}`);\n}"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 127,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^(\\w+) makes a beckoning motion\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "if (nexGui.party.members.indexOf(args[1]) == -1)\n    return;\n\nsend_direct(`follow ${args[1]}`);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 170,
                    "matching": "substring",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "(Party): \\w+ says, \"Block (\\w+).\"",
                    "actions": [
                        {
                            "action": "script",
                            "script": "send_direct(`block ${args[1]}`);"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 171,
                    "matching": "substring",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "(Party): \\w+ says, \"Unblock.\"",
                    "actions": [
                        {
                            "action": "script",
                            "script": "send_direct('unblock');"
                        }
                    ]
                }
            ],
            "actions": []
        },
        {
            "type": "group",
            "name": "nexGui.timer",
            "enabled": true,
            "id": 125,
            "items": [
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 124,
                    "matching": "exact",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "You touch the tree of life tattoo.",
                    "actions": [
                        {
                            "action": "script",
                            "script": "// Example of how to start timers.\n\nnexGui.timer.timers['tree'].start()\ngag_current_line();\n//nexGui.msg.actionMsg('Self', 'tattoo', 'tree')"
                        }
                    ]
                }
            ],
            "actions": []
        },
        {
            "type": "group",
            "name": "nexGui.msg",
            "enabled": true,
            "id": 50,
            "items": [
                {
                    "type": "group",
                    "name": "Attack Messages",
                    "enabled": true,
                    "id": 13,
                    "items": [
                        {
                            "type": "trigger",
                            "name": "Self Occultist Warp",
                            "enabled": true,
                            "id": 14,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You reach out and clench a fist before (.+), who screams and doubles over in agony as (?:her|his) skin suddenly bubbles with gangrenous growths\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Warp', args[1]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Gut",
                            "enabled": true,
                            "id": 15,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You rip into (.+) with your massive, deadly claws\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Gut', args[1]);\n"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Incantation",
                            "enabled": true,
                            "id": 16,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^Drawing from the well of your puissance, you invoke a dramatic chant in the dragon tongue. Your voice resonates with each word, culminating in a wave of magical energy that you bend to your will and thrust towards (.+), bombarding \\w+ with the ancient power\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\n\nnexGui.msg.actionMsg('Self', 'Incantation', args[1]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Frostwave",
                            "enabled": true,
                            "id": 17,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You breathe a wave of icy air at (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Frostwave', args[1]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Dragonchill",
                            "enabled": true,
                            "id": 18,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You form small chunks of ice in your enormous maw, then spit them at (.+) in a barrage\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Dragonchill', args[1]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Ague",
                            "enabled": true,
                            "id": 19,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You let loose a steady stream of cold air around (.+), who begins to shiver uncontrollably\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Ague', args[1]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Tailsmash",
                            "enabled": true,
                            "id": 20,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You flick your tail at (.+), dismissively brushing aside the paltry shield protecting \\w+\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Tailsmash', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Overrride",
                            "enabled": true,
                            "id": 21,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You barrel into (.+) and knock \\w+ to the ground before stomping over \\w+ prone form\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Override', args[1]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Glaciate",
                            "enabled": true,
                            "id": 155,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^You breathe a column of icy air at (.+)'s head, stunning (?:her|him)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Glaciate', args[1]);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Self Dragon Frostrive",
                            "enabled": true,
                            "id": 169,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(.+)'s translucent shield cracks and fades away as you breathe an icy blast at it\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg('Self', 'Frostrive', args[1]);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Other Dragon Gut",
                            "enabled": true,
                            "id": 22,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) rips into (.+) with (his|her) massive, deadly claws\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Gut', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Dragon Incantation",
                            "enabled": true,
                            "id": 32,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^A resonant vibration emanates from (\\w+) as (?:he|she) invokes a rumbling, sonorous chant in the dragon tongue. As the sound increases, (.+) jerks violently, (?:his|her|its) body wracked by an unseen force\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Incantation', args[2]);\n\n//A resonant vibration emanates from Hup as he invokes a rumbling, sonorous chant in the dragon tongue. As the sound increases, an ogre mage jerks violently, his body wracked by an unseen force."
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight SNB2",
                            "enabled": true,
                            "id": 130,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) viciously jabs .+ into (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "//gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Jab', args[2]);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight DSL1",
                            "enabled": true,
                            "id": 23,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) slashes into (.+) with a .+\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "//gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Doubleslash', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight DSL2",
                            "enabled": true,
                            "id": 24,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) swings .+ at (.+) with all (her|his) might\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "//gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Doubleslash', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight DSL3",
                            "enabled": true,
                            "id": 25,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^Lightning-quick, (\\w+) jabs (.+) with .+\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "//gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Doubleslash', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight Raze",
                            "enabled": true,
                            "id": 26,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) razes (.+)'s magical shield with .+\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": ""
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight Whirl",
                            "enabled": true,
                            "id": 175,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) skilfully (?:whips|whirls) .+ toward (your|\\w+)(?:|'s) (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "//gag_current_line();\n//Antoninus skilfully whirls a Skullsplitter flail toward your left leg.\nnexGui.msg.actionMsg(args[1], 'Whirl', `${args[2]}-${args[3].toUpperCase()}`);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight SNB1",
                            "enabled": true,
                            "id": 27,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^The blade of (\\w+) is a blur as (?:he|she) moves forward, slicing into (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "//gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Doubleslash', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Knight SNB2",
                            "enabled": true,
                            "id": 28,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) brutally smashes .+ into (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "//gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Doubleslash', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Shaman Bleed",
                            "enabled": true,
                            "id": 29,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) points an imperious finger at (.+) and blood begins to flow from (?:her|his) pores\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Bleed', args[2]);"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Other Serpent Garrote",
                            "enabled": true,
                            "id": 67,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) slips behind (.+) and garrotes (?:him|her|it) with (?:his|her) whip\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Garrote', args[2]);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Other Alchemist Iron",
                            "enabled": true,
                            "id": 149,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^Ashen flames engulf (.+)'s body, burning (?:her|his|its) skin with their frigid touch\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "console.log(current_block);\ncurrent_block[1].gag = true;\ngag_current_line();\nnexGui.msg.actionMsg(current_block[1].line.split(' ')[0], 'Iron', args[1]);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Other Psion Overhand",
                            "enabled": true,
                            "id": 172,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) brings a translucent mace around in a savage overhand strike, smashing it into the head of (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'Overhand', args[2]);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Other Occultist Warp",
                            "enabled": true,
                            "id": 176,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) reaches out and clenches a fist before (.+), who screams and doubles over in agony as \\w+ skin suddenly bubbles with gangrenous growths\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'warp', args[2]);"
                                }
                            ]
                        }
                    ],
                    "actions": []
                },
                {
                    "type": "group",
                    "name": "Curing Messages",
                    "enabled": true,
                    "id": 101,
                    "items": [
                        {
                            "type": "trigger",
                            "name": "",
                            "enabled": true,
                            "id": 150,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) eats (?:a|an|some) (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'eat', args[2]);"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "",
                            "enabled": true,
                            "id": 112,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) takes some salve from a vial and rubs it on (?:his|her) (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'salve', args[2])"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "",
                            "enabled": true,
                            "id": 114,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) takes a long drag off (?:his|her) pipe\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'smoke', 'Pipe')"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "",
                            "enabled": true,
                            "id": 151,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) takes a drink from (?:a|an) (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'sip', args[2])"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Tattoo: Tree",
                            "enabled": true,
                            "id": 115,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) touches a tree of life tattoo\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'tattoo', 'tree')"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Tattoo: General",
                            "enabled": true,
                            "id": 174,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^(\\w+) touches a (\\w+) tattoo\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'tattoo', args[2])"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Tattoo: Shield",
                            "enabled": true,
                            "id": 144,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^A nearly invisible magical shield forms around (.+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'tattoo', 'shield')"
                                }
                            ]
                        },
                        {
                            "type": "trigger",
                            "name": "Focus",
                            "enabled": true,
                            "id": 116,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^A look of extreme focus crosses the face of (\\w+)\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": "gag_current_line();\nnexGui.msg.actionMsg(args[1], 'focus', '')"
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Runewarden Sun",
                            "enabled": true,
                            "id": 117,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^A rune like a rising sun upon the ground flares, bathing \\w+? with healing magic\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": ""
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Shrugging",
                            "enabled": true,
                            "id": 118,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^\\w+? hunches (?:her|his) shoulders and lets out a soft hiss\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": ""
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "Sun Tarot",
                            "enabled": true,
                            "id": 122,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^The globe of light illuminates \\w+? with its brilliance\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": ""
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "",
                            "enabled": true,
                            "id": 119,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^\\w+? is surrounded in a cool, refreshing mist\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": ""
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "",
                            "enabled": true,
                            "id": 120,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^A demonic crimson glow emanates from \\w+?\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": ""
                                }
                            ],
                            "items": []
                        },
                        {
                            "type": "trigger",
                            "name": "",
                            "enabled": true,
                            "id": 121,
                            "matching": "regexp",
                            "whole_words": true,
                            "case_sensitive": true,
                            "text": "^\\w+ stands up\\.$",
                            "actions": [
                                {
                                    "action": "script",
                                    "script": ""
                                }
                            ],
                            "items": []
                        }
                    ],
                    "actions": []
                },
                {
                    "type": "group",
                    "name": "Areas",
                    "enabled": true,
                    "id": 177,
                    "items": [
                        {
                            "type": "group",
                            "name": "General",
                            "enabled": true,
                            "id": 181,
                            "items": [
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 178,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^(.+) batters you with an overhead blow\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg(args[1], 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 247,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^(.+) attempts to transfix you, but succeeds only in curing your blindness\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()"
                                        }
                                    ]
                                }
                            ],
                            "actions": []
                        },
                        {
                            "type": "group",
                            "name": "Moghedu",
                            "enabled": true,
                            "id": 179,
                            "items": [
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 182,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Drawing a small dagger from his belt, a mhun guard opens a deep gash on your abdomen\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a mhun guard', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 183,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Issuing a cry to Moghedu, an elite mhun keeper jabs you violently with his rapier\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('an elite mhun keeper', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 184,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Wiping a strange liquid on each blade, an elite mhun keeper hacks into you, delivering the venoms\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('an elite mhun keeper', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 185,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Crossing his arms in midswing, an elite mhun keeper slashes you twice with his blades\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('an elite mhun keeper', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 186,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A mhun guard swings wildly with his shortsword, cutting you with the sharp blade\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a mhun guard', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 187,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A mhun (\\w+) skewers you with a well-placed jab\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg(`a mhun ${args[1]}`, 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 188,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A mhun bodyguard hacks at you with his broadsword\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a mhun bodyguard', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 189,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A mhun knight crushes you with a blow from his silver mace\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a mhun knight', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                }
                            ],
                            "actions": []
                        },
                        {
                            "type": "group",
                            "name": "Istarion",
                            "enabled": true,
                            "id": 180,
                            "items": [
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 190,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "His blades swimming through the air in a series of complex movements, a sword spider outrider slashes into you with incredible force.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sword spider outrider', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 191,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "Swinging her staff in a wide vertical arc, a watch spider outrider brings it down hard upon your head.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a watch spider outrider', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 192,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "A whisper spider outrider swings a quick jab at your face, connecting on the jaw.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a whisper spider outrider', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 193,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^With one hand clasped around a strange, spiderweb-shaped pendant hanging around his neck, a (watch|whisper|sword) spider outrider charges at you\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg(`a ${args[1]} spider outrider`, 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 194,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "A whisper spider outrider sends one of his hands out to your throat. A triumphant look crosses his face as he grips tightly on your windpipe.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a whisper spider outrider', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 195,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "Feinting a jab, a sword spider outrider brings the hilt of his other sword towards you, stunning you with its forceful impact into your skull.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a watch spider outrider', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 196,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "A whisper spider outrider moves close to you with speed, grabbing an arm while slamming into your body. The force of the impact causes you to somersault onto the ground, dislocating your arm in the process.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a whisper spider outrider', 'brokenarm', 'Self')\nnexGui.msg.actionMsg('a whisper spider outrider', 'prone', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 197,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "Pointing the spherical tip of the staff towards you, a watch spider outrider smiles before tapping it gently. A torrent of fire erupts from its surface, setting you aflame with its incandescence.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a watch spider outrider', 'burning', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 198,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "Finding both hands preoccupied, a sword spider outrider draws his head back, slamming it into your face.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sword spider outrider', 'attack', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 199,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "A watch spider outrider sends the sphere end of her staff into one of your kneecaps, causing your bones to crack and pop unpleasantly.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a watch spider outrider', 'brokenleg', 'Self')"
                                        }
                                    ],
                                    "items": []
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 205,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "With one hand clasped around a strange, spiderweb-shaped pendant hanging around her neck, a watch spider outrider charges at you.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a watch spider outrider', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 231,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Khurthia, Sword Ascendant pronates her wrist slightly and slaps the flat end of the blade across the front of your face\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line();\nnexGui.msg.actionMsg('Khurthia, Sword Ascendant', 'attack', 'Self')\n"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 232,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^With an aggravated growl, Shantuir, Watch Ascendant swings his staff violently at your arm which shatters upon contact with a sickening crunch\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line();\nnexGui.msg.actionMsg('Shantuir, Watch Ascendant', 'brokenarm', 'Self')\n"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 233,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Staff gripped firmly in both hands, Shantuir, Watch Ascendant swings it forward with malicious intent toward the side of your head. As the staff connects, your world turns black\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line();\nnexGui.msg.actionMsg('Shantuir, Watch Ascendant', 'blackout', 'Self')\n"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 242,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^With an incensed snarl, Khurthia, Sword Ascendant swings her blade aggressively across your chest, a torrent of warm blood spilling from the wound left in its wake\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line();\nnexGui.msg.actionMsg('Khurthia, Sword Ascendant', 'attack', 'Self')\n"
                                        }
                                    ]
                                }
                            ],
                            "actions": []
                        },
                        {
                            "type": "group",
                            "name": "Sirocco Fortress",
                            "enabled": true,
                            "id": 200,
                            "items": [
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 201,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "With a thunderous roar, a knight of the Siroccian Order slams his gauntleted fist hard into your face.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a knight of the Siroccian Order', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 221,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^His steel blade flashing through the air like lightning, a knight of the Siroccian Order brutally skewers your body\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a knight of the Siroccian Order', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 202,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "Stepping forward, a stout footsoldier thrusts the blade of his sword deep into your stomach.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a stout footsoldier', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 203,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "With a grunt of exertion, a stout footsoldier swings his sword down to slash brutally across your body.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a stout footsoldier', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 204,
                                    "matching": "exact",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "Spinning in a blur of shadow and steel, a proud ducal guard whips his swords through your body in a flashing maelstrom of blood and blade.",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a proud ducal guard', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 218,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A fortress guardsman scowls and swings his sword, chopping it into your side amid a spray of blood\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a fortress guardsman', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 219,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Stepping forward, a fortress guardsman thrusts the blade of his sword deep into your stomach\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a fortress guardsman', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 220,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^With a grunt of exertion, a fortress guardsman swings his sword down to slash brutally across your body\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a fortress guardsman', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 222,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Expertly throwing you off balance with a kick to the chest, a proud ducal guard brings the butt of his sword slamming down on your skull in a fierce blow\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a proud ducal guard', 'dizziness', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 243,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A proud ducal guard whirls, seizing your arm and twisting it backward until the bone snaps with a sickening crunch\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a proud ducal guard', 'brokenarm', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 244,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^In one sinuous motion, a proud ducal guard wipes a damp cloth across his blade and plunges it directly into your chest to administer a deadly poison\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a proud ducal guard', 'loki', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 245,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A proud ducal guard whirls his blades in a shining nexus of glittering steel that seizes your attention and transfixes you utterly\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line();\nif (next_line().indexOf('blindness') > -1)\n    nexGui.msg.actionMsg('a proud ducal guard', 'unblind', 'Self');\nelse\n    nexGui.msg.actionMsg('a proud ducal guard', 'transfix', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 246,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Stepping forward abruptly, a knight of the Siroccian Order slams his tower shield violently into you, knocking you to the ground and stunning you\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a knight of the Siroccian Order', 'prone', 'Self')\nnexGui.msg.actionMsg('a knight of the Siroccian Order', 'stun', 'Self')"
                                        }
                                    ]
                                }
                            ],
                            "actions": []
                        },
                        {
                            "type": "group",
                            "name": "Tir Murann",
                            "enabled": true,
                            "id": 206,
                            "items": [
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 207,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A Vertani guard jabs forward with a powerful blow, skewering through your ribs\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a Vertani guard', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 210,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A Vertani guard sideswipes your ankle with the blunt end of his weapon, the force of the blow causing you to tumble to the ground\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a Vertani guard', 'prone', 'self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 211,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A Vertani guard vaults towards you with surprising speed, bringing the bladed side of his weapon bearing down on you\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a Vertani guard', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 212,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^The accompanying slash carves deeply through your flesh from your shoulder blade diagonally across to the waist\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line();"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 213,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^You gnash your teeth as a scimitar-wielding Vertani soldier brings the butt of his scimitar down on your head, splitting your skull\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a scimitar-wielding Vertani soldier', 'stun', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 214,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A House Feranki mage pulls out a small box the size of a human fist, shakes it, and throws it at you. On contact it explodes, burning you horribly\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a House Feranki mage', 'burning', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 215,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A House Feranki mage causes some needles to levitate above his palm. With a gesture, they fly unerringly toward you, pricking your skin. You scream in pain as toxins sear through your body\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a House Feranki mage', 'epilepsy', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 216,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A House Tsez air mage clasps her hands in front her face, and in response you find yourself gasping for air, unable to breathe\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a House Feranki mage', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 217,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A House Tsez air mage gives a dismissive wave of her hand at you, and you feel a tremendous blast of biting wind that threatens to knock you down\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a House Feranki mage', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 237,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A House Tsez air mage weaves her fingers in front of your face, leaving a fascinating trail of colour that you can't help admiring\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (next_line().indexOf('blindness') > -1)\n    nexGui.msg.actionMsg('a House Feranki mage', 'unblind', 'Self');\nelse\n    nexGui.msg.actionMsg('a House Feranki mage', 'transfix', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 241,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A House Feranki mage throws a piece of rope at you. In mid-air, it expands into a mesh of netting that contracts around you\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line();\nnexGui.msg.actionMsg('a House Feranki mage', 'entangled', 'Self');"
                                        }
                                    ]
                                }
                            ],
                            "actions": []
                        },
                        {
                            "type": "group",
                            "name": "Caverns of Riagath",
                            "enabled": true,
                            "id": 208,
                            "items": [
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 209,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A sturdy troll woman screams with rage and drives her spear deep into your chest\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy troll woman', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 227,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A look of absolute rage takes over a burly troll guard as he lunges at you, sinking his abnormally sharp teeth deep into your throat\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a burly troll guard', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 228,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A burly troll guard screams with rage and drives his spear deep into your chest\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a burly troll guard', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 229,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A burly troll guard lowers his head and charges at you, slamming powerfully into your abdomen\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a burly troll guard', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 230,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A sturdy troll woman lowers her head and charges at you, slamming powerfully into your abdomen\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy troll woman', 'stun', 'Self')"
                                        }
                                    ]
                                }
                            ],
                            "actions": []
                        },
                        {
                            "type": "group",
                            "name": "Battlesite of Mourning Pass",
                            "enabled": true,
                            "id": 223,
                            "items": [
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 224,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Seeing an opening in your guard, a sturdy knight stabs his longsword at you, piercing your flesh\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy knight', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 225,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Swinging his longsword at your head, a sturdy knight deals you a glancing blow across the temple\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy knight', 'dizziness', 'Self')\nnexGui.msg.actionMsg('a sturdy knight', 'stun', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 226,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Drawing his longsword back, a sturdy knight thrusts the blade forwards, twisting it as he plunges it into your intestines\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy knight', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 234,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A heavily armoured warrior sylphid beetle snaps at you with his serrated pincers, tearing off chunks of bloody flesh\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a heavily armoured warrior sylphid beetle', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 235,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Lowering his head, a heavily armoured warrior sylphid beetle smashes you in the gut with his horned antennae\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a heavily armoured warrior sylphid beetle', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 236,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Rearing back on his hind legs, a heavily armoured warrior sylphid beetle lifts his head and spits a glob of saliva at your face\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a heavily armoured warrior sylphid beetle', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 238,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^A sturdy knight slices into you with his longsword, leaving behind a layer of dirt and grime within the gaping wound\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy knight', 'loki', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 239,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Swinging its head around, a mighty undead warhorse sinks its teeth into your shoulder, tearing off a chunk of flesh\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy knight', 'attack', 'Self')"
                                        }
                                    ]
                                },
                                {
                                    "type": "trigger",
                                    "name": "",
                                    "enabled": true,
                                    "id": 240,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "text": "^Tightening his grip on his longsword, a sturdy knight brings it around in a quick arc, slashing your body with the tip of his blade\\.$",
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "gag_current_line()\nnexGui.msg.actionMsg('a sturdy knight', 'attack', 'Self')"
                                        }
                                    ]
                                }
                            ],
                            "actions": []
                        }
                    ],
                    "actions": []
                }
            ],
            "actions": []
        },
        {
            "type": "group",
            "name": "nexGui.cdb",
            "enabled": true,
            "id": 135,
            "items": [],
            "actions": []
        },
        {
            "type": "group",
            "name": "nexGui.stream",
            "enabled": false,
            "id": 154,
            "items": [
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 153,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\[Curing\\]: (.+)",
                    "actions": [
                        {
                            "action": "script",
                            "script": "// This block gags all of the curing text that follows the [Curing] msg.\n// things like sipping the health vial. Only the [Curing] (text). is displayed.\ncurrent_line.parsed_line.chunks[current_line.parsed_line.chunks.length-1]._txt = current_line.parsed_line.chunks[current_line.parsed_line.chunks.length-1]._txt.toLowerCase().toProperCase();\nfor(let i = current_block.indexOf(current_line)+1; i < current_block.length; i++) {\n\tif (current_block[i].prompt) {\n        break;\n    }\n    if (current_block[i].line) {\n        current_block[i].gag = true;\n    }\n}\n\nif (args[1] == 'CLOT') {\n    nexGui.stream.clotCount++;\n    if (nexGui.stream.clotCount > 1) {\n        $('.nexGui-Clot').text(`Clot x${nexGui.stream.clotCount}`)\n    } else {\n    \tnexGui.stream.write('#nexGuiStream', [\n            '<span style=\"color: #800000; \">[Curing]:</span>',\n            '<span style=\"color: #aaaaaa\" class=\"nexGui-Clot\">Clot</span>'\n        ], 'ms');\n    }\n} else {\n    nexGui.stream.clotCount = 0;\n    $('.nexGui-Clot').removeClass('nexGui-Clot');\n    nexGui.stream.write('#nexGuiStream', [\n        \"<span class='mono' style='color:#800000'>[Curing]:</span>\",\n        `<span>${args[1].toProperCase()}</span>`\n    ], 'ms');\n}\n\ngag_current_line();"
                        }
                    ],
                    "items": []
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": false,
                    "id": 148,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^\\[System\\]: Added (.+) to your (class|eqbal) queue\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "let tab = $(\"<div></div>\", {class: \"mono\"}).css({\n                display:'inline-table',\n               'width': '100%',\n               'text-align': 'left',\n               'table-layout': 'fixed',\n                'font-size': '11px'\n           });\n           let row = $(\"<div></div>\").css({\n                display:'table-row'\n            }).appendTo(tab)\n            $('<div></div>', {class: \"timestamp\"}).css({display:'table-cell',color:'grey', width:'9ch'}).text(client.getTime('ms')).appendTo(row);\n            let cellWhat = $('<div></div>').css({\n                display:'table-cell',\n                    width: 'auto'\n                }).appendTo(row);\n            $('<span></span>', {style:\"color:white\"}).text('[').appendTo(cellWhat);\n            $('<span></span>', {style:\"color:orange\"}).text(args[2]).appendTo(cellWhat);\n            $('<span></span>', {style:\"color:white\"}).text(']').appendTo(cellWhat);\n\n            let cellQ = $('<div></div>').css({\n                display:'table-cell',\n                    width: '60%'\n                }).appendTo(row);\n            $('<span></span>', {style:\"color:white\"}).text('[').appendTo(cellQ);\n            $('<span></span>', {style:\"color:orange\"}).text(args[1].toLowerCase().replace(nexSys.EqBalQueue._pre+\"|\", '')).appendTo(cellQ);\n            $('<span></span>', {style:\"color:white\"}).text(']').appendTo(cellQ);\n\n            nexGui.stream.write('#tbl_2h3b', tab);  "
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 157,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^You have set the '(\\w+)' defence to the (\\d+) priority\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.stream.write('#nexGuiStream', [\n    `<span class='mono' style=\"color:deepskyblue\">[Prio] ${args[2]}</span>`,\n    `<span>${args[1].toProperCase()}</span>`\n    ], 'ms');"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 158,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^You have set the '(\\w+)' affliction to the (\\d+) priority\\.$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.stream.write('#nexGuiStream', [\n    `<span class='mono' style=\"color:deepskyblue\">[Prio] ${args[2]}</span>`,\n    `<span>${args[1].toProperCase()}</span>`\n    ], 'ms');"
                        }
                    ]
                },
                {
                    "type": "trigger",
                    "name": "",
                    "enabled": true,
                    "id": 163,
                    "matching": "regexp",
                    "whole_words": true,
                    "case_sensitive": true,
                    "text": "^Your target is now: (.+)$",
                    "actions": [
                        {
                            "action": "script",
                            "script": "nexGui.stream.write('#nexGuiStream', [\n    `<div><span class='' style=\"color:red\">[Target]</span>`,\n    `<span>${args[1]}</span>`\n    ], 'ms');"
                        }
                    ]
                }
            ],
            "actions": []
        },
        {
            "type": "group",
            "name": "Classes",
            "enabled": true,
            "id": 96,
            "items": [
                {
                    "type": "function",
                    "name": "nexGui.occultist",
                    "enabled": true,
                    "id": 97,
                    "code": "'use strict'\n\nnexGui.occultist = {\n\tlayout() {\n        nexGui.restoreLayout();\n        nexGui.classBalance = 'Entity';\n        \n        //Populate the MISSING DEF pane\n        nexGui.def.keepup = [\n            /* standard basics */\n            'blindness',  \n            'deafness', \n            'deathsight',\n            'fangbarrier', \n            'insomnia', \n            'insulation', \n            'kola', \n            'levitating', \n            'nightsight',\n            'selfishness',\n            'speed',\n            'temperance',\n            'thirdeye',\n            \n\t\t\t/*tattos */\n            'boartattoo',\n            'moontattoo',\n            'mosstattoo',\n            'oxtattoo',\n            'megalithtattoo', \n            'mindseye',\n            'cloak',\n            'starburst',\n            \n            /* Class specific */\n            'lifevision',\n            'shroud',\n            'devilmark',\n            'golgothagrace'\n        ];\n\t\tnexGui.def.update(GMCP.Defences);           \n        \n\t\t        \n        // Populate the TIMER pane. Timers do not raise events when they are completed.\n        // the timers are for informational tracking and awareness.\n        nexGui.timer.add('tree', 'Tree Tattoo', 15, 'grow', '#nexTimerTableTop');\n        nexGui.timer.add('fool', 'Fool', 35, 'grow', '#nexTimerTableTop');\n        nexGui.timer.add('sunTick', 'Sun Tick', 25, 'grow', '#nexTimerTableTop');\n        \n        nexGui.timer.add('tentacles', 'Tentacles', 45, 'shrink', '#nexTimerTableBot');\n        nexGui.timer.add('arctar', 'Arctar Orb', 45, 'shrink', '#nexTimerTableBot');\n        nexGui.timer.add('sunOrb', 'Sun Orb', 180, 'shrink', '#nexTimerTableBot');\n\n        // Populate the PVP pane RIGHT side\n        // First we clear out the section we are going to use.\n        $('#pvpToggleTableRight tr').remove();\n        // Now we used the built in function to create the toggles we would like to use\n        nexGui.addOption('#pvpToggleTableRight', 'Mass', false);\n        nexGui.addOption('#pvpToggleTableRight', 'Rebounding', false);\n        nexGui.addOption('#pvpToggleTableRight', 'Hold Breath', false);\n        nexGui.addOption('#pvpToggleTableRight', 'Tunnel Vision', false);\n        // First we clear out any potential duplicate event listeners. (just in case)\n        nexSys.eventStream.removeListener('nexGui-option-Mass', 'masstoggle');\n        nexSys.eventStream.removeListener('nexGui-option-Rebounding', 'reboundingtoggle');\n        nexSys.eventStream.removeListener('nexGui-option-HoldBreath', 'holdbreathtoggle');\n        nexSys.eventStream.removeListener('nexGui-option-TunnelVision', 'tunnelvisiontoggle');\n        // Now we add a listener with a simple function to execute when a toggle is changed. \n        //In these cases it reads the true false value and changes the defence priority between 25 and 0\n        nexSys.eventStream.registerEvent('nexGui-option-Mass', function masstoggle(tf) {send_direct(`curing priority defence mass ${tf?'25':'reset'}`)});\n        nexSys.eventStream.registerEvent('nexGui-option-Rebounding', function reboundingtoggle(tf) {send_direct(`curing priority defence rebounding ${tf?'25':'reset'}`)});\n        nexSys.eventStream.registerEvent('nexGui-option-HoldBreath', function holdbreathtoggle(tf) {send_direct(`curing priority defence heldbreath ${tf?'25':'reset'}`)});\n        nexSys.eventStream.registerEvent('nexGui-option-TunnelVision', function tunnelvisiontoggle(tf) {send_direct(`tunnelvision ${tf?'on':'off'}`)});\n\n        \n        // Populate the PVP pane LEFT side. Options DO raise events when toggled. This\n        // can be used to update your own setting values. Examples further down.\n        // nexGui.addOption(where, title, initial setting)\n        //nexGui.addOption('#pvpToggleTableLeft', 'Tentacles', occultist.occultism.useTentacles);\n        nexGui.addOption('#pvpToggleTableLeft', 'Tentacles', true);\n        nexGui.addOption('#pvpToggleTableLeft', 'Firelash', true);\n        nexGui.addOption('#pvpToggleTableLeft', 'Sun Tarot', false);\n        nexGui.addOption('#pvpToggleTableLeft', 'Dopple', false);\n        \n        // This is an example of how I integrate the GUI functions into my personal settings.\n        // First we create a function that will react to the event of a toggle changing. \n        // When toggles are changed they return a true/false value.\n        // The function will receive a true or false value. You then can do what you wish\n        // with that information.\n        let tentacleListener = function(tf) {\n            if (!occultist) {return;}\n        \toccultist.occultism.useTentacles = tf;\n        }\n        // Now we add the function we created to the event system. The event raised by toggles are\n        // all in the format \"nexGui-option-(name of the toggle)\" The event is case sensitive. \n        // for multi-word toggle names the id is the name with no spaces \"Sun Tarot\" = \"nexGui-option-SunTarot\"\n        nexSys.eventStream.removeListener('nexGui-option-Tentacles', 'tentacleListener');\n        nexSys.eventStream.registerEvent('nexGui-option-Tentacles', tentacleListener);\n        \n        \n        let prioritySelect = $(\"<p></p>\", {id: \"pvpPrioritySelect\"});\n        $(\"<p>Combat Priority:  </p>\", {}).appendTo(prioritySelect);\n        let pvpPrioritySelectList = $(\"<select></select>\", {name: \"pvpPrioritySelect\", id: \"pvpPrioritySelectList\"})\n        .change(function() {\n            nexSys.eventStream.raiseEvent('nexGui-option-prioritySelect', $(this).val());\n        })\n        .appendTo(prioritySelect);\n        $(\"<option></option>\", {value: 'Enlighten'}).text('Enlighten').appendTo(pvpPrioritySelectList);\n        $(\"<option></option>\", {value: 'Truename'}).text('Truename').appendTo(pvpPrioritySelectList);\n        $(\"<option></option>\", {value: 'Damage'}).text('Damage').appendTo(pvpPrioritySelectList);\n        $(\"<option></option>\", {value: 'Aeon'}).text('Aeon').appendTo(pvpPrioritySelectList);\n        \n        prioritySelect.appendTo('#pvpLeft');\n        pvpPrioritySelectList.appendTo('#pvpLeft');\n    \n\n    }\n}"
                },
                {
                    "type": "function",
                    "name": "nexGui.dragon",
                    "enabled": true,
                    "id": 137,
                    "code": "'use strict';\n/*\n\tI personally only use dragon form for hunting. I do not do any PVP in dragon form.\n    With that in mind, the settings, options, and layouts that I use for my default dragon\n    GUI are all bashing focused for me.\n*/\n\nnexGui.dragon = {\n\tlayout() {\n        nexGui.classBalance = 'none',\n        \n        // Populate the TIMER pane\n        nexGui.timer.add('tree', 'Tree Tattoo', 15, 'grow', '#nexTimerTableTop');\n        nexGui.timer.add('dragonheal', 'Dragon Heal', 20, 'grow', '#nexTimerTableTop');\n        nexGui.timer.add('crystaltattoo', 'Crystal Tattoo', 3600, 'grow', '#nexTimerTableTop');\n        \n        nexGui.timer.add('dragonchill', 'Dragonchill', 16, 'grow', '#nexTimerTableBot');\n        nexGui.timer.add('ague', 'Ague', 23, 'grow', '#nexTimerTableBot');\n        nexGui.timer.add('glaciate', 'Glaciate', 33, 'grow', '#nexTimerTableBot');\n        nexGui.timer.add('override', 'Override', 23, 'grow', '#nexTimerTableBot');\n        nexGui.timer.add('frostwave', 'Frostwave', 23, 'grow', '#nexTimerTableBot');\n        \n        // Populate the PVP pane\n        $('#pvpToggleTableLeft tr').remove();\n\n        $('#pvpToggleTableRight tr').remove();\n        nexGui.addOption('#pvpToggleTableRight', 'Mass', false);\n        nexGui.addOption('#pvpToggleTableRight', 'Rebounding', false);\n        nexGui.addOption('#pvpToggleTableRight', 'Hold Breath', false);\n        nexGui.addOption('#pvpToggleTableRight', 'Tunnel Vision', false);\n        nexSys.eventStream.removeListener('nexGui-option-Mass', 'masstoggle');\n        nexSys.eventStream.removeListener('nexGui-option-Rebounding', 'reboundingtoggle');\n        nexSys.eventStream.removeListener('nexGui-option-HoldBreath', 'holdbreathtoggle');\n        nexSys.eventStream.removeListener('nexGui-option-TunnelVision', 'tunnelvisiontoggle');\n        nexSys.eventStream.registerEvent('nexGui-option-Mass', function masstoggle(tf) {send_direct(`curing priority defence mass ${tf?'25':'reset'}`)});\n        nexSys.eventStream.registerEvent('nexGui-option-Rebounding', function reboundingtoggle(tf) {send_direct(`curing priority defence rebounding ${tf?'25':'reset'}`)});\n        nexSys.eventStream.registerEvent('nexGui-option-HoldBreath', function holdbreathtoggle(tf) {send_direct(`curing priority defence heldbreath ${tf?'25':'reset'}`)});\n        nexSys.eventStream.registerEvent('nexGui-option-TunnelVision', function tunnelvisiontoggle(tf) {send_direct(`tunnelvision ${tf?'on':'off'}`)});\n\n        let prioritySelect = $(\"<div></div>\", {id: \"pvpPrioritySelect\"});\n        $(\"<p>Bashing Attack:  </p>\", {}).appendTo(prioritySelect);\n        let bashAttackSelectList = $(\"<select></select>\", {name: \"bashingAttackSelect\", id: \"bashingAttackSelect\"})\n        .change(function() {\n            nexSys.eventStream.raiseEvent('bashingAttackSelect', $(this).val());\n        })\n        .appendTo(prioritySelect);\n        $(\"<option></option>\", {value: 'Gut'}).text('Gut').appendTo(bashAttackSelectList);\n        $(\"<option></option>\", {value: 'Incantation'}).text('Incantation').appendTo(bashAttackSelectList);\n        \n        prioritySelect.appendTo('#pvpLeft');\n        bashAttackSelectList.appendTo('#pvpLeft');\n        \n        //Populate the MISSING DEF pane\n        nexGui.def.keepup = [\n            /* standard basics */\n            'blindness',  \n            'deafness', \n            'deathsight',\n            'fangbarrier', \n            'insomnia', \n            'insulation', \n            'kola', \n            'levitating', \n            'nightsight',\n            'selfishness',\n            'speed',\n            'temperance',\n            'thirdeye',\n            \n\t\t\t/*tattos */\n            'boartattoo',\n            'moontattoo',\n            'mosstattoo',\n            'oxtattoo',\n            'megalithtattoo', \n            'mindseye',\n            'cloak',\n            'starburst',\n            \n            /* Class specific */\n            'dragonarmour',\n            'dragonbreath',           \n        ];\n        nexGui.def.update(GMCP.Defences);\n    }\n}"
                },
                {
                    "type": "function",
                    "name": "nexGui.airlord",
                    "enabled": true,
                    "id": 156,
                    "code": "'use strict'\n\nnexGui.airlord = {\n\tlayout() {\n        nexGui.restoreLayout();\n\t\t//Populate the MISSING DEF pane\n        nexGui.def.keepup = [\n            /* standard basics */\n            'blindness',  \n            'deafness', \n            'deathsight',\n            'fangbarrier', \n            'insomnia', \n            'insulation', \n            'kola', \n            'levitating', \n            'nightsight',\n            'selfishness',\n            'speed',\n            'temperance',\n            'thirdeye',\n            \n\t\t\t/*tattos */\n            'boartattoo',\n            'moontattoo',\n            'mosstattoo',\n            'oxtattoo',\n            'megalithtattoo', \n            'mindseye',\n            'cloak',\n            'starburst',\n            \n            /* Class specific */\n            'sky\n        ];\n\t\tnexGui.def.update(GMCP.Defences);\n    }\n}"
                }
            ],
            "actions": []
        },
        {
            "type": "alias",
            "name": "",
            "enabled": true,
            "id": 164,
            "matching": "exact",
            "whole_words": true,
            "case_sensitive": true,
            "prefix_suffix": true,
            "actions": [
                {
                    "action": "script",
                    "script": "nexGui.aliases.summary();"
                }
            ],
            "text": "ng"
        },
        {
            "type": "alias",
            "name": "",
            "enabled": true,
            "id": 162,
            "matching": "regexp",
            "whole_words": true,
            "case_sensitive": true,
            "prefix_suffix": true,
            "actions": [
                {
                    "action": "script",
                    "script": "if (typeof nexGui === 'undefined' || typeof Realm === 'undefined') {return;}\n\nnexGui.aliases.call(args[1], args[2] ? args[2] : false)"
                }
            ],
            "text": "^ng (\\w+)\\s?(.+)?$",
            "items": []
        },
        {
            "type": "alias",
            "name": "",
            "enabled": false,
            "id": 98,
            "matching": "regexp",
            "whole_words": true,
            "case_sensitive": true,
            "prefix_suffix": true,
            "actions": [
                {
                    "action": "script",
                    "script": "let profession = args[1].toLowerCase();\nif (!nexGui[profession]) {\n    console.log(`Attempted to run nexGui on undefined ${profession}`);\n    return;\n}\nrun_function(`nexGui.${profession}`, {}, 'Nexgui');\nnexGui[`${profession}`].layout();"
                }
            ],
            "text": "^ng class (\\w+)$"
        }
    ]
}